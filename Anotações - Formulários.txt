O que é um Formulário?
	Forms tem o papel de receber dados do usuário e enviar para um servidor. 
	Por meio deles, podemos validar dados.
	As tags mais utilizadas são: form, label e input.
		form - cria o formulário e o delimita.
		label - descreve os inputs, faz a legenda para que o usuário saiba o que escrever.
		input - tag que inserimos os dados, como number, email, text e etc.

Criando Formulário
	Para criar um formulário, é necessário a tag form, que encapsula todos os elementos do formulário.
	Dentro dela, temos labels e inputos, mas podemos ter outras tags, como divs.
	A tag input tem um atributo chamado "type", que é onde definimos o propósito do input.
	Um input do tipo text, recebe dados de texto, por exemplo.
	
Atributos da Tag form
	A tag form tem dois atributos geralmente, que são:
		action -  o arquivo/página que os dados serão enviados.
		method - "get" ou "post", receber dados ou enviar dados.
			get recebe e post envia.
			No entanto, como é um artifício que faz parte do back-end, não será explorado no curso.
	
Atributo name
	Utilizamos o atributo name para configurar nossos inputs.
	O valor é ligado ao propósito do input, a sua categoria:
	Este atributo é utilizado para pegar o valor quando o form é enviado para o servidor.
	Ex:
		Um input que recebe a idade de um usuário, pode ter um name com o valor de "age/idade":
			<input type="text" name="age">

Atributo label
	A tag label tem um atributo, e nós o utilizamos para linkar com um input.
	O nome do atributo é "for".
	O valor deve ser o mesmo que o atributo name do atributo que corresponde aquela label.
	Utilizamos "for" por propósitos semânticos.
	Isso ajuda o site a ser melhor rankeado no Google.

Enviando Dados do Formulário
	Podemos enviar os dados do form para o servidor através de um botão de submit.
	O botão também é um input, porém mudamos o type para submit.
	Quando o usuário clicar no botão, o processamento do form acontece.
	Os dados serão enviados ao servidor através de uma requisição HTTP.
	Aqui é onde precisamos de uma integração com o back-end, para aproveitar os dados do formulário.
	Comando:
		<input type="submit" value="Enviar">

Elemento select
	A tag select tem as opções representadas por tags de option.
	Select também tem um atributo name.
	O value estará em cada uma das options, e é isso que receberemos no lado do servidor.
	Então temos duas tags para criar um elemento de seleção: select e option.
	Comando:
		<select name="job">
            <option value="programador">Programador</option>
            <option value="estagiário">Estagiário</option>
            <option value="secretário">Secretário</option>
        </select>

Atributo selected
	Podemos iniciar o nosso input de select com uma opção selecionada.
	Para isso, esta option precisa ter o atributo selected.
	É uma boa abordagem se tivermos  uma opção muito provável.
	Comando:
		<label for="contract">Você leu os termos?</label>
        <select name="contract">
            <option value="sim">Sim</option>
            <option value="não" selected> Não </option>
        </select>
	Basicamente, ele coloca de padrão o que está como selected.
	Na ocasião, é mais provável que a pessoa ainda não tenha lido o contrato, por exemplo.
	Também podemos criar um select que nos permite mais de uma option selecionada.
	É útil quando queremos aceitar um ou mais dados.
	Precisamos apenas inserir o atributo multiple na tag select.
	Comando:
        <label for="items">Selecione os itens desejados: </label>
        <select name="items" multiple>
            <option value="maça">Maçã</option>
            <option value="uva">Uva</option>
		</select>

Campo textarea
	A tag textarea é semelhante ao input text.
	É utilizada para textos maiores.
	Isso nos permite uma área maior para digitar e verificar o texto que digitamos.
	Comando:
		<label for="comment">Faça um comentário:</label>
        <textarea name="comment" cols="30" rows="10"></textarea>
			No entanto, nao utilizamos a parte "cols" e "rows", pois isso faz parte da estilização feita pelo front-end no CSS.
		
		<textarea name="comment"></textarea> É o suficiente.

Fieldset e legend
	Fieldset é uma tag para agrupar inputs.
	Legend é como uma label, que descreve os inputs agrupados.
	Utilizamos esta tag para conectar dois ou mais inputs que tenham o mesmo sentido.
	Cria um grupo separado dos demais.
	Por exemplo: nome e sobrenome.
	Comando:
		<fieldset>
            <legend>Preencha as suas informações: </legend>
            <label for="firstname">Nome: </label>
            <input type="text" name="firstname">
            <label for="lastname">Sobenome:</label>
            <input type="text" name="lastname">
        </fieldset>

Datalist
	Datalist é como um select, porém com um autocomplete.
	Podemos pesquisar por possíveis valores para preencher o input.
	Também é possível selecionar alguma opção por meio de uma lista.
	As opções são linkadas por um atributo chamado list.
	É um tipo de select no qual vai aparecer as opções e o usuário também vai poder digitar o que quer.
	Se já tiver, o próprio site vai sugerir, por meio de um autocomplete.
	Comando:
		<label for="flavor">Escolha o sabor: </label>
        <input type="text" list="flavors" name="flavor">
			É necessário especificar com o "list".
			
        <datalist id="flavors">
            <option value="Morango"></option> --> precisamos colocar exatamente como vai aparecer pro usuário.
            <option value="Baunilha"></option> 
            <option value="Chocolate"></option>
            <option value="Cereja"></option>
        </datalist>
		
Input com senha
	Se quisermos que um usuário digite uma senha no input, devemos colocar "password" no atributo type.
	Então, o texto será exibido com *.
	Comando:
		<label for="password">Digite a sua senha:</label>
        <input type="password" name="password">

Reiniciando o Form
	Podemos reiniciar todos os campos do form através de um input do tipo reset.
	Ele é um botão, que ao ser clicado limpa o form.
	Comando:
		<input type="submit" value="Enviar">

Input radio
	Ele é utilizado para selecionar apenas uma opção de várias possibilidades
	Não podemos escolher mais de um, então há a necessidade da decisão entre uma das opções.
	Comando:
		<div class="radio">
            <input type="radio" value="bmw" name="car_model">
            <label for="bmw">BMW</label>
        </div>
	
	Importante alterar no CSS:
		.radio label,.radio input{
			display: inline-block;
		}
		
Checkbox
	O checkbox é similar ao radio, porém podemos selecionar uma ou mais opções, e também cancelar a seleção de uma opção.
	O "name" do input deve ser o mesmo da label, e deve ser colocado "[]" no final.
	Comando:
		<div class="radio"> --> bom aproveitar do anterior
            <input type="checkbox" name="optionals[]" value="hibrido">
            <label for="hibrido">Híbrido</label>
        </div>

Input de data
	O input do tipo date é utilizado para selecionar uma data.
	Temos um calendário que nos auxilia para datas passadas ou futuras.
	Podemos também preencher o valor digitando.
	Comando:
		<label for="birthday">Data de nascimento:</label>
        <input type="date" name="birthday">

Input de arquivos
	Podemos enviar um arquivo para o servidor com o type = "file".
	Comando:
		<label for="image">Insira a imagem:</label>
        <input type="file" name="image">
		
Input de números
	Configurando o type para "number", obtemos um input que só aceita dígitos.
	Este input possui setas, que nos permite alterar o número através de cliques.
	Geralmente é melhor utilizar como texto, pois temos problemas como números de telefone, CEP,CPF, que usam traços e pontos, por exemplo.
	Comando:
		<label for="numbers">Insira os números:</label>
        <input type="number" name="numbers">

Input de e-mails
	O input de e-mail é similar ao de texto, porém quando enviamos o formulário, temos uma validação.
	A validação checa se o texto tem o padrão de um e-mail, verificando o @, por exemplo.
	A validação definitiva está no back-end. Esta é apenas uma validação para que o usuário insira um e-mail sintaticamente correto.
	Comando:
		<label for="email">Insira seu E-Mail:</label>
        <input type="email" name="email">
	
O atributo value
	Com o value, podemos definir um valor ao input alvo, como se o usuário já tivesse preenchido algo.
	Muito utilizado quando temos um valor padrão.
	Comando:
		<label for="value">Digite um valor:</label>
        <input type="text" value="Valor padrão" name="value"> --> "Valor padrão" já estará escrito como padrão na caixa de texto do site.

Atributo disabled
	É utilizado para bloquear um input, quando não podemos digitar mais nada neste input.
	Útil quando não queremos que o usuário preencha um determinado input.
	Comando:
		<label for="disabled">Não pode digitar aqui</label>
        <input type="text" disabled value="Não é possível alterar">
		
Atributo placeholder
	Com ele, podemos adicionar dicas para os usuários do sistema, sendo exibida no próprio input.
	Ao começarmos a preencher com algum valor, a dica some e o valor digitado fica sendo exibido.
	Comando:
		<label for="currentjob">Digite sua profissão: </label>
        <input type="text" name="currentjob" placeholder="No que você está trabalhando agora?">
	Muito útil, pois pode orientar o usuário em como ele deve preencher o espaço.

Atributo required
	O atributo required o preenchimento de algum campo.
	Se tentarmos dar submit sem um valor no campo com required, receberemos um alerta da página.
	Isto é um tipo de validação HTML.
	Comando:
		<label for="birthyear">Ano de Nascimento:</label>
        <input type="text" placeholder="Digite o ano em que você nasceu" required>